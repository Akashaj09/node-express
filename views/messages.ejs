<div id="app">
    <div class="loader" v-if="loading" align="center">{{ loading }}
        <img src="/images/loader.gif" style="width: auto; height: 400px;">
    </div>
    <div class="message-holder" v-else>
        <div class="msg_history" id="messages">
            <div class="message-row" v-for="(message, index) in messages">
                <div class="incoming_msg" v-if="message.userId != auth.id ">
                    <div class="incoming_msg_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
                    <div class="received_msg">
                        <div class="received_withd_msg">
                            <p>{{ message.message }}</p>
                            <span class="time_date">  {{ moment.utc(message.createdAt).format("h:mm a") }} | {{ moment.utc(message.createdAt).format("MMM Do YY") }}</span></div>
                    </div>
                </div>
                <div class="outgoing_msg" v-else-if="message.userId == auth.id">
                    <div class="sent_msg">
                        <p>{{ message.message }}</p>
                        <span class="time_date"> {{ moment.utc(message.createdAt).format("h:mm a") }} | {{ moment.utc(message.createdAt).format("MMM Do YY") }}</span> </div>
                </div>
            </div>
        </div>
        <div class="type_msg">
            <div class="input_msg_write">
                <input type="text" class="write_msg" placeholder="Type your message" @keyup.enter="sendMessage" v-model="message.message" />
                <button class="msg_send_btn" type="button"><i class="fa fa-paper-plane-o" aria-hidden="true" @click="sendMessage"></i></button>
            </div>
        </div>
    </div>
</div>

<script src="/js/vue.js"></script>
<script src="/js/axios.js" ></script>
<script src="/js/moment.js"></script>
<script src="/socket.io/socket.io.js"></script>

<script>
    const socket = io();
    socket.on("connect", () => {
        console.log("Connected");
    })
</script>
<script>
    new Vue({
        el: "#app",
        data: {
            messages: [],
            message: {
                receiver: '',
                userId: '',
                message: '',
                createdAt: '',
                updatedAt: '',
                seen_at: ''
            },
            loading: true,
            auth: {},
            moment,
            socket: {}
        },
        methods: {
            getMessage: function(){
                axios.get("/message/messages/<%= receiver_id %>").then((response) => {
                    this.loading = false;
                    this.messages = response.data.messages;
                    this.auth = response.data.auth;
                    this.socket = io({
                        transportOptions: {
                            pooling: {
                                extraHeaders: {
                                    'Authorization' : this.auth.token
                                }
                            }
                        }
                    });
                }).catch(function (error) {
                    console.log(error);
                })
            },
            sendMessage: function () {
                this.message.receiver = parseInt("<%= receiver_id %>");
                this.message.userId = this.auth.id;
                this.message.createdAt = moment().format("YYYY-MM-DD HH:mm:ss");
                this.message.seen_at = moment().format("YYYY-MM-DD HH:mm:ss");
                this.message.updatedAt = moment().format("YYYY-MM-DD HH:mm:ss");
                if (this.message.message !== ""){
                    this.messages.push(Object.assign({}, this.message));
                    axios.post("/message/store-user-message", this.message).then((response) => {
                        this.socket.emit("send-new-message", this.message);
                        this.message.message = "";
                    }).catch(error => {
                        this.message.message = "";
                        console.log(error);
                    });
                }
            }
        },
        created: function () {
            this.getMessage();
            socket.on("message/<%= auth.id %>/<%= receiver_id %>", (message) => {
                this.messages.push(message);
            })
        },
        updated: function () {
            let container = this.$el.querySelector("#messages");
            container.scrollTop = container.scrollHeight;
        }
    });
</script>
<style>
    .write_msg{
        padding: 5px 10px;
        height: 36px;
    }
</style>